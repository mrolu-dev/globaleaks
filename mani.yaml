apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: globaleaks
  name: globaleaks
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: globaleaks
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: globaleaks
    spec:
      containers:
        - image: ristabel/globaleaks:v1.0
          name: globaleaks
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - mountPath: /var/globaleaks
              name: globaleaks
      restartPolicy: Always
      volumes:
        - name: globaleaks
          persistentVolumeClaim:
            claimName: globaleaks

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: globaleaks
  name: globaleaks
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 8080
    - name: "443"
      port: 443
      targetPort: 8443
  selector:
    io.kompose.service: globaleaks

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: globaleaks
  name: globaleaks
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: globaleaks-ingress
#   annotations:
#     # Traefik-specific annotations
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     traefik.ingress.kubernetes.io/router.middlewares: "globaleaks-https-redirect"
#     # Add the following annotation for using a self-signed certificate
#     traefik.ingress.kubernetes.io/router.tls.certresolver: selfsigned
# spec:
#   tls:
#     - hosts:
#         - your.example.com
#       secretName: globaleaks-tls # Secret for TLS certificates
#   rules:
#     - host: your.example.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: globaleaks
#                 port:
#                   number: 443 # Matching the 8443 targetPort in your Service
# ---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: globaleaks-ingressroute
  namespace: default # Change to the appropriate namespace
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`your.example.com`) && (PathPrefix(/dashboard) || PathPrefix(/api)) # Replace with your actual domain or a placeholder for local testing
      kind: Rule
      services:
        - name: globaleaks
          port: 80
  tls:
    secretName: globaleaks-tls
---


apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: globaleaks-certificate
  namespace: default
spec:
  secretName: globaleaks-tls
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  commonName: your.example.com
  dnsNames:
    - your.example.com

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}

